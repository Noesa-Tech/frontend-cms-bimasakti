{
  "version": 3,
  "sources": ["../../src/radiobutton/style/RadioButtonStyle.js", "../../src/radiobutton/BaseRadioButton.vue", "../../src/radiobutton/RadioButton.vue", "../../src/radiobutton/RadioButton.vue?vue&type=template&id=7e5ffc70&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-radiobutton {\n    position: relative;\n    display: inline-flex;\n    user-select: none;\n    vertical-align: bottom;\n    width: ${dt('radiobutton.width')};\n    height: ${dt('radiobutton.height')};\n}\n\n.p-radiobutton-input {\n    cursor: pointer;\n    appearance: none;\n    position: absolute;\n    top: 0;\n    inset-inline-start: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    opacity: 0;\n    z-index: 1;\n    outline: 0 none;\n    border: 1px solid transparent;\n    border-radius: 50%;\n}\n\n.p-radiobutton-box {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    border: 1px solid ${dt('radiobutton.border.color')};\n    background: ${dt('radiobutton.background')};\n    width: ${dt('radiobutton.width')};\n    height: ${dt('radiobutton.height')};\n    transition: background ${dt('radiobutton.transition.duration')}, color ${dt('radiobutton.transition.duration')}, border-color ${dt('radiobutton.transition.duration')}, box-shadow ${dt('radiobutton.transition.duration')}, outline-color ${dt(\n    'radiobutton.transition.duration'\n)};\n    outline-color: transparent;\n    box-shadow: ${dt('radiobutton.shadow')};\n}\n\n.p-radiobutton-icon {\n    transition-duration: ${dt('radiobutton.transition.duration')};\n    background: transparent;\n    font-size: ${dt('radiobutton.icon.size')};\n    width: ${dt('radiobutton.icon.size')};\n    height: ${dt('radiobutton.icon.size')};\n    border-radius: 50%;\n    backface-visibility: hidden;\n    transform: translateZ(0) scale(0.1);\n}\n\n.p-radiobutton:not(.p-disabled):has(.p-radiobutton-input:hover) .p-radiobutton-box {\n    border-color: ${dt('radiobutton.hover.border.color')};\n}\n\n.p-radiobutton-checked .p-radiobutton-box {\n    border-color: ${dt('radiobutton.checked.border.color')};\n    background: ${dt('radiobutton.checked.background')};\n}\n\n.p-radiobutton-checked .p-radiobutton-box .p-radiobutton-icon {\n    background: ${dt('radiobutton.icon.checked.color')};\n    transform: translateZ(0) scale(1, 1);\n    visibility: visible;\n}\n\n.p-radiobutton-checked:not(.p-disabled):has(.p-radiobutton-input:hover) .p-radiobutton-box {\n    border-color: ${dt('radiobutton.checked.hover.border.color')};\n    background: ${dt('radiobutton.checked.hover.background')};\n}\n\n.p-radiobutton:not(.p-disabled):has(.p-radiobutton-input:hover).p-radiobutton-checked .p-radiobutton-box .p-radiobutton-icon {\n    background: ${dt('radiobutton.icon.checked.hover.color')};\n}\n\n.p-radiobutton:not(.p-disabled):has(.p-radiobutton-input:focus-visible) .p-radiobutton-box {\n    border-color: ${dt('radiobutton.focus.border.color')};\n    box-shadow: ${dt('radiobutton.focus.ring.shadow')};\n    outline: ${dt('radiobutton.focus.ring.width')} ${dt('radiobutton.focus.ring.style')} ${dt('radiobutton.focus.ring.color')};\n    outline-offset: ${dt('radiobutton.focus.ring.offset')};\n}\n\n.p-radiobutton-checked:not(.p-disabled):has(.p-radiobutton-input:focus-visible) .p-radiobutton-box {\n    border-color: ${dt('radiobutton.checked.focus.border.color')};\n}\n\n.p-radiobutton.p-invalid > .p-radiobutton-box {\n    border-color: ${dt('radiobutton.invalid.border.color')};\n}\n\n.p-radiobutton.p-variant-filled .p-radiobutton-box {\n    background: ${dt('radiobutton.filled.background')};\n}\n\n.p-radiobutton.p-variant-filled.p-radiobutton-checked .p-radiobutton-box {\n    background: ${dt('radiobutton.checked.background')};\n}\n\n.p-radiobutton.p-variant-filled:not(.p-disabled):has(.p-radiobutton-input:hover).p-radiobutton-checked .p-radiobutton-box {\n    background: ${dt('radiobutton.checked.hover.background')};\n}\n\n.p-radiobutton.p-disabled {\n    opacity: 1;\n}\n\n.p-radiobutton.p-disabled .p-radiobutton-box {\n    background: ${dt('radiobutton.disabled.background')};\n    border-color: ${dt('radiobutton.checked.disabled.border.color')};\n}\n\n.p-radiobutton-checked.p-disabled .p-radiobutton-box .p-radiobutton-icon {\n    background: ${dt('radiobutton.icon.disabled.color')};\n}\n\n.p-radiobutton-sm,\n.p-radiobutton-sm .p-radiobutton-box {\n    width: ${dt('radiobutton.sm.width')};\n    height: ${dt('radiobutton.sm.height')};\n}\n\n.p-radiobutton-sm .p-radiobutton-icon {\n    font-size: ${dt('radiobutton.icon.sm.size')};\n    width: ${dt('radiobutton.icon.sm.size')};\n    height: ${dt('radiobutton.icon.sm.size')};\n}\n\n.p-radiobutton-lg,\n.p-radiobutton-lg .p-radiobutton-box {\n    width: ${dt('radiobutton.lg.width')};\n    height: ${dt('radiobutton.lg.height')};\n}\n\n.p-radiobutton-lg .p-radiobutton-icon {\n    font-size: ${dt('radiobutton.icon.lg.size')};\n    width: ${dt('radiobutton.icon.lg.size')};\n    height: ${dt('radiobutton.icon.lg.size')};\n}\n`;\n\nconst classes = {\n    root: ({ instance, props }) => [\n        'p-radiobutton p-component',\n        {\n            'p-radiobutton-checked': instance.checked,\n            'p-disabled': props.disabled,\n            'p-invalid': instance.$pcRadioButtonGroup ? instance.$pcRadioButtonGroup.$invalid : instance.$invalid,\n            'p-variant-filled': instance.$variant === 'filled',\n            'p-radiobutton-sm p-inputfield-sm': props.size === 'small',\n            'p-radiobutton-lg p-inputfield-lg': props.size === 'large'\n        }\n    ],\n    box: 'p-radiobutton-box',\n    input: 'p-radiobutton-input',\n    icon: 'p-radiobutton-icon'\n};\n\nexport default BaseStyle.extend({\n    name: 'radiobutton',\n    theme,\n    classes\n});\n", "<script>\nimport BaseInput from '@primevue/core/baseinput';\nimport RadioButtonStyle from 'primevue/radiobutton/style';\n\nexport default {\n    name: 'BaseRadioButton',\n    extends: BaseInput,\n    props: {\n        value: null,\n        binary: Boolean,\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: null\n        },\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputClass: {\n            type: [String, Object],\n            default: null\n        },\n        inputStyle: {\n            type: Object,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: RadioButtonStyle,\n    provide() {\n        return {\n            $pcRadioButton: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"getPTOptions('root')\" :data-p-checked=\"checked\" :data-p-disabled=\"disabled\">\n        <input\n            :id=\"inputId\"\n            type=\"radio\"\n            :class=\"[cx('input'), inputClass]\"\n            :style=\"inputStyle\"\n            :value=\"value\"\n            :name=\"groupName\"\n            :checked=\"checked\"\n            :tabindex=\"tabindex\"\n            :disabled=\"disabled\"\n            :readonly=\"readonly\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @change=\"onChange\"\n            v-bind=\"getPTOptions('input')\"\n        />\n        <div :class=\"cx('box')\" v-bind=\"getPTOptions('box')\">\n            <div :class=\"cx('icon')\" v-bind=\"getPTOptions('icon')\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { equals } from '@primeuix/utils/object';\nimport BaseRadioButton from './BaseRadioButton.vue';\n\nexport default {\n    name: 'RadioButton',\n    extends: BaseRadioButton,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur'],\n    inject: {\n        $pcRadioButtonGroup: {\n            default: undefined\n        }\n    },\n    methods: {\n        getPTOptions(key) {\n            const _ptm = key === 'root' ? this.ptmi : this.ptm;\n\n            return _ptm(key, {\n                context: {\n                    checked: this.checked,\n                    disabled: this.disabled\n                }\n            });\n        },\n        onChange(event) {\n            if (!this.disabled && !this.readonly) {\n                const newModelValue = this.binary ? !this.checked : this.value;\n\n                this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.writeValue(newModelValue, event) : this.writeValue(newModelValue, event);\n                this.$emit('change', event);\n            }\n        },\n        onFocus(event) {\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.$emit('blur', event);\n            this.formField.onBlur?.(event);\n        }\n    },\n    computed: {\n        groupName() {\n            return this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.groupName : this.$formName;\n        },\n        checked() {\n            const value = this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.d_value : this.d_value;\n\n            return value != null && (this.binary ? !!value : equals(value, this.value));\n        }\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"getPTOptions('root')\" :data-p-checked=\"checked\" :data-p-disabled=\"disabled\">\n        <input\n            :id=\"inputId\"\n            type=\"radio\"\n            :class=\"[cx('input'), inputClass]\"\n            :style=\"inputStyle\"\n            :value=\"value\"\n            :name=\"groupName\"\n            :checked=\"checked\"\n            :tabindex=\"tabindex\"\n            :disabled=\"disabled\"\n            :readonly=\"readonly\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @change=\"onChange\"\n            v-bind=\"getPTOptions('input')\"\n        />\n        <div :class=\"cx('box')\" v-bind=\"getPTOptions('box')\">\n            <div :class=\"cx('icon')\" v-bind=\"getPTOptions('icon')\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { equals } from '@primeuix/utils/object';\nimport BaseRadioButton from './BaseRadioButton.vue';\n\nexport default {\n    name: 'RadioButton',\n    extends: BaseRadioButton,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur'],\n    inject: {\n        $pcRadioButtonGroup: {\n            default: undefined\n        }\n    },\n    methods: {\n        getPTOptions(key) {\n            const _ptm = key === 'root' ? this.ptmi : this.ptm;\n\n            return _ptm(key, {\n                context: {\n                    checked: this.checked,\n                    disabled: this.disabled\n                }\n            });\n        },\n        onChange(event) {\n            if (!this.disabled && !this.readonly) {\n                const newModelValue = this.binary ? !this.checked : this.value;\n\n                this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.writeValue(newModelValue, event) : this.writeValue(newModelValue, event);\n                this.$emit('change', event);\n            }\n        },\n        onFocus(event) {\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.$emit('blur', event);\n            this.formField.onBlur?.(event);\n        }\n    },\n    computed: {\n        groupName() {\n            return this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.groupName : this.$formName;\n        },\n        checked() {\n            const value = this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.d_value : this.d_value;\n\n            return value != null && (this.binary ? !!value : equals(value, this.value));\n        }\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "_ref2", "instance", "props", "checked", "disabled", "$pcRadioButtonGroup", "$invalid", "$variant", "size", "box", "input", "icon", "BaseStyle", "extend", "name", "name", "BaseInput", "props", "value", "binary", "Boolean", "readonly", "type", "tabindex", "Number", "inputId", "String", "inputClass", "Object", "inputStyle", "ariaLabelledby", "ariaLabel", "style", "RadioButtonStyle", "provide", "$pcRadioButton", "$parentInstance", "script", "BaseRadioButton", "inheritAttrs", "emits", "inject", "$pcRadioButtonGroup", "undefined", "methods", "getPTOptions", "key", "_ptm", "ptmi", "ptm", "context", "checked", "disabled", "onChange", "event", "newModelValue", "writeValue", "$emit", "onFocus", "onBlur", "_this$formField$onBlu", "_this$formField", "formField", "call", "computed", "groupName", "$formName", "d_value", "equals", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "cx", "$options", "_createElementVNode", "id", "invalid", "apply", "arguments", "_hoisted_2"]
}

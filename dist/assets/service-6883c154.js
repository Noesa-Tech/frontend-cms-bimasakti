import{Y as c,$ as i,a0 as r}from"./index-adf5aec1.js";const o=c("ServiceStore",{state:()=>({isLoading:!1,serviceAll:[],problem:{}}),actions:{async fetchService(s=""){this.isLoading=!0;try{const e=await i.get(`/auth/services?status=${s}`);this.serviceAll=e.data}catch{}finally{this.isLoading=!1}},async fetchProblem(s){this.isLoading=!0;try{const e=await i.get(`/services-problem/${s}`);return this.problem=e.data,e}catch{}finally{this.isLoading=!1}},async addService(s){this.isLoading=!0;const e=new FormData;for(const t in s)e.append(t,s[t]);try{const t=await i.post("/auth/services",e,{headers:{"Content-Type":"multipart/form-data"}});r("success",t.message)}catch{}finally{this.isLoading=!1}},async updateServcice(s,e){this.isLoading=!0;const t=new FormData;for(const a in e)t.append(a,e[a]);try{const a=await i.post(`/auth/services/${s}`,t,{headers:{"Content-Type":"multipart/form-data"}});r("success",a.message)}catch{}finally{this.isLoading=!1}},async delete(s){this.isLoading=!0;try{const e=await i.delete(`/auth/services/${s}`);r("success",e.message)}catch{}finally{this.isLoading=!1}}}});export{o as S};

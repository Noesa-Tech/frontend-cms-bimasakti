import{Y as d,$ as t,a0 as e}from"./index-d9219d4e.js";const o=d("OrderStore",{state:()=>({isLoading:!1,allOrder:[],detail:null,summary:null}),actions:{async fetchOrder(a,s){this.isLoading=!0;try{const r=await t.get(`/auth/orders?status=${a}&city_id=${s}`);this.allOrder=r.data}catch{}finally{this.isLoading=!1}},async fetchSummaryOrder(a){this.isLoading=!0;try{const s=await t.get(`/auth/order/summary?city_id=${a}`);this.summary=s.data}catch{}finally{this.isLoading=!1}},async detailOrder(a){this.isLoading=!0;try{const s=await t.get(`/auth/orders/${a}`);this.detail=s.data}catch{}finally{this.isLoading=!1}},async acceptOrder(a,s){this.isLoading=!0;try{const r=await t.post("/auth/order/confirmation",{vendor_id:a,order_id:s});e("success",r.message)}catch{}finally{this.isLoading=!1}},async rejectOrder(a,s,r){this.isLoading=!0;try{const i=await t.post("/auth/order/reject",{vendor_id:a,order_id:s,reason:r});e("success",i.message)}catch{}finally{this.isLoading=!1}},async createOrder(a){this.isLoading=!0;try{return await t.post("/order",a)}catch{}finally{this.isLoading=!1}},async updateOrder(a,s){this.isLoading=!0;try{const r=await t.post(`/auth/orders/${s}`,a);e("success",r.message)}catch{}finally{this.isLoading=!1}}}});export{o as O};
